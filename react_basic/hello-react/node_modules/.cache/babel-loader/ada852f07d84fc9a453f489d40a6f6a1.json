{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/MyFile/react2/hello-react/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React,{useState,useMemo,useCallback,memo} from 'react'\n// function SubCounter ({onClick,data}){\n//     console.log('SubCounter render');\n//     return (\n//         <button onClick={data.number}></button>\n//     )\n// }\n// SubCounter = memo(SubCounter)\n// let oldData,oldAddClick;\n// export default function Counter2(){\n//     console.log('Counter2 render');\n//     const [name,setName] = useState('计时器');\n//     const [number,setNumber] = useState(0)\n//     // const data = useMemo(() => {number},[]);\n//     const data = useMemo(() => number, [number]);\n//     console.log('data === oldData',data === oldData);\n//     oldData = data;\n//     const addClick = useCallback(\n//         () => {\n//             setNumber(number + 1);\n//         },[number],\n//     )\n//     oldAddClick = addClick\n//     console.log('addClick === oldAddClick',addClick === oldAddClick);\n//     return (\n//         <>\n//             <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}/>\n//             <SubCounter data = {data} onClick={addClick}/>\n//         </>\n//     )\n// }\nimport { Button, CircularProgress, Container, Grid, InputAdornment, Snackbar, TextField } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { AccountCircle } from '@material-ui/icons';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, Redirect } from 'react-router';\nimport { useAuth } from 'index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = 'http://localhost:5050';\n\nconst Login = () => {\n  _s();\n\n  const [session, setSession] = useAuth();\n  const History = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [res, setRes] = useState(null);\n  const [fetchError, setFetchError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [Message, setMessage] = useState();\n  const [open, setOpen] = useState(false);\n\n  const login = async () => {\n    if (/^\\w{4,20}$/g.test(username) && /^\\w{4,20}$/g.test(password)) {\n      setDisable(true);\n      setLoading(true);\n\n      try {\n        const result = await fetch(`${baseurl}/admin/login`, {\n          method: 'POST',\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        console.log(result);\n        setLoading(false);\n        setRes(result);\n      } catch (e) {\n        setLoading(false);\n        setDisable(false);\n        setFetchError(e);\n      }\n    } else {\n      setOpen(true);\n      setMessage({\n        message: '无效输入',\n        MessageType: 'warning'\n      });\n    }\n  };\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n\n  useEffect(() => {\n    if (res !== null && res.status === 200) {\n      History.push('/admin');\n      setSession('administrator');\n    } else if (res !== null && (res === null || res === void 0 ? void 0 : res.status) !== 200 || fetchError) {\n      setDisable(false);\n      setOpen(true);\n\n      if (fetchError) {\n        setMessage({\n          message: fetchError.message,\n          MessageType: 'error'\n        });\n      } else {\n        setMessage({\n          message: '不正确的用户名或密码',\n          MessageType: 'error'\n        });\n      }\n    }\n  }, [res, fetchError]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      onClose: () => setOpen(false),\n      autoHideDuration: 2000,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: Message ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n        severity: Message.MessageType,\n        elevation: 6,\n        variant: \"filled\",\n        children: Message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 8,\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(SecurityIcon, {\n                style: {\n                  fontSize: 72,\n                  margin: '0 auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                style: {\n                  width: 480\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this)\n                },\n                label: \"\\u7BA1\\u7406\\u5458\\u5E10\\u53F7\",\n                variant: \"outlined\",\n                onChange: ({\n                  currentTarget\n                }) => setUsername(currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"password\",\n                style: {\n                  width: 480\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(FingerprintIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this)\n                },\n                label: \"\\u5BC6\\u7801\",\n                variant: \"outlined\",\n                onChange: ({\n                  currentTarget\n                }) => setPassword(currentTarget.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: disable,\n                onClick: () => login(),\n                variant: \"contained\",\n                color: \"primary\",\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 41\n                }, this) : '登录'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"sja6Q4cb5r2jKn3aKZD8gdDwCLc=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/hello-react/src/App.js"],"names":["Button","CircularProgress","Container","Grid","InputAdornment","Snackbar","TextField","MuiAlert","AccountCircle","FingerprintIcon","SecurityIcon","React","useEffect","useState","useHistory","Redirect","useAuth","baseurl","Login","session","setSession","History","username","setUsername","password","setPassword","res","setRes","fetchError","setFetchError","loading","setLoading","disable","setDisable","Message","setMessage","open","setOpen","login","test","result","fetch","method","headers","Headers","body","JSON","stringify","console","log","e","message","MessageType","status","push","marginTop","vertical","horizontal","undefined","fontSize","margin","width","startAdornment","currentTarget","value"],"mappings":"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","sourcesContent":["// import React,{useState,useMemo,useCallback,memo} from 'react'\r\n\r\n// function SubCounter ({onClick,data}){\r\n//     console.log('SubCounter render');\r\n//     return (\r\n//         <button onClick={data.number}></button>\r\n//     )\r\n// }\r\n// SubCounter = memo(SubCounter)\r\n\r\n// let oldData,oldAddClick;\r\n\r\n// export default function Counter2(){\r\n//     console.log('Counter2 render');\r\n//     const [name,setName] = useState('计时器');\r\n//     const [number,setNumber] = useState(0)\r\n\r\n//     // const data = useMemo(() => {number},[]);\r\n//     const data = useMemo(() => number, [number]);\r\n//     console.log('data === oldData',data === oldData);\r\n\r\n//     oldData = data;\r\n\r\n//     const addClick = useCallback(\r\n//         () => {\r\n//             setNumber(number + 1);\r\n//         },[number],\r\n//     )\r\n//     oldAddClick = addClick\r\n//     console.log('addClick === oldAddClick',addClick === oldAddClick);\r\n    \r\n\r\n//     return (\r\n//         <>\r\n//             <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n//             <SubCounter data = {data} onClick={addClick}/>\r\n//         </>\r\n\r\n//     )\r\n// }\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    Grid,\r\n    InputAdornment,\r\n    Snackbar,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, Redirect } from 'react-router';\r\nimport { useAuth } from 'index';\r\n\r\nconst baseurl = 'http://localhost:5050';\r\n\r\nconst Login = () => {\r\n    const [session, setSession] = useAuth();\r\n    const History = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [res, setRes] = useState(null);\r\n    const [fetchError, setFetchError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [disable, setDisable] = useState(false);\r\n    const [Message, setMessage] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const login = async () => {\r\n        if (/^\\w{4,20}$/g.test(username) && /^\\w{4,20}$/g.test(password)) {\r\n            setDisable(true);\r\n            setLoading(true);\r\n            try {\r\n                const result = await fetch(`${baseurl}/admin/login`, {\r\n                    method: 'POST',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                    }),\r\n                    body: JSON.stringify({ username, password }),\r\n                });\r\n                console.log(result);\r\n                setLoading(false);\r\n                setRes(result);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                setDisable(false);\r\n                setFetchError(e);\r\n            }\r\n        } else {\r\n            setOpen(true);\r\n            setMessage({ message: '无效输入', MessageType: 'warning' });\r\n        }\r\n    };\r\n    if (session) {\r\n        return <Redirect to=\"/admin\" />;\r\n    }\r\n    useEffect(() => {\r\n        if (res !== null && res.status === 200) {\r\n            History.push('/admin');\r\n            setSession('administrator');\r\n        } else if ((res !== null && res?.status !== 200) || fetchError) {\r\n            setDisable(false);\r\n            setOpen(true);\r\n            if (fetchError) {\r\n                setMessage({\r\n                    message: fetchError.message,\r\n                    MessageType: 'error',\r\n                });\r\n            } else {\r\n                setMessage({\r\n                    message: '不正确的用户名或密码',\r\n                    MessageType: 'error',\r\n                });\r\n            }\r\n        }\r\n    }, [res, fetchError]);\r\n    return (\r\n        <Container style={{ marginTop: 120 }}>\r\n            <Snackbar\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                autoHideDuration={2000}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            >\r\n                {Message ? (\r\n                    <MuiAlert\r\n                        severity={Message.MessageType}\r\n                        elevation={6}\r\n                        variant=\"filled\"\r\n                    >\r\n                        {Message.message}\r\n                    </MuiAlert>\r\n                ) : undefined}\r\n            </Snackbar>\r\n            <form>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                    {/* <Grid item xs={6}>\r\n                        <Card>\r\n                            <CardMedia image=\"https://img.goldposter.com/wallpaper/2019/12/RoadTreeYellowAutumn915783773e87ac59bf0675f64b709d08_wallpaper_goldposter_com_.jpeg?x-oss-process=image/resize,m_fill,h_1024,w_819\" />\r\n                        </Card>\r\n                    </Grid> */}\r\n                    <Grid item xs={6}>\r\n                        <Grid container spacing={8} justify=\"center\">\r\n                            <Grid item>\r\n                                <SecurityIcon\r\n                                    style={{ fontSize: 72, margin: '0 auto' }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    style={{ width: 480 }}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    label=\"管理员帐号\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={({ currentTarget }) =>\r\n                                        setUsername(currentTarget.value)\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    type=\"password\"\r\n                                    style={{ width: 480 }}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <FingerprintIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    label=\"密码\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={({ currentTarget }) =>\r\n                                        setPassword(currentTarget.value)\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    disabled={disable}\r\n                                    onClick={() => login()}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    {loading ? (\r\n                                        <CircularProgress color=\"primary\" />\r\n                                    ) : (\r\n                                        '登录'\r\n                                    )}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    );\r\n};\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}