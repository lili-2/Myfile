{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/MyFile/react2/hello-react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React,{useState,useReducer} from 'react'\n// //若一个参数是对象的话 可以不用useState 考虑useReducer\n// const App = (params) => {\n//     const countReducer = (state, action) => {\n//         switch (action.type) {\n//             case 'add':\n//                 return state + 1;\n//             case 'minus':\n//                 return state - 1;\n//             default:\n//                 return state;\n//         }\n//     }\n//     //依然定义了一个 state 是 count，初始值为0 更新dispatch   \n//     const [count, countDispatch] = useReducer(countReducer, 0);\n//     const onClick = (params) => {\n//         //放入最新的 action\n// countDispatch({type:'add'})\n//     }\n//     return (\n//         <>\n//             <div>{count}</div>\n//             <button onClick={() => onClick()}>button</button>\n//         </>\n//     )\n// }\n// export default App;\n// import React,{useEffect} from \"react\";\n// function App(){\n//     const [count,setCount] = useState(0);\n//     console.log('render');\n//     useEffect(() => {\n//         let timer = setInterval(() => {\n//             setCount(count + 1)\n//         },1000)\n//         console.log('useEffect')\n//         return () => {\n//             console.log('clean effect')\n//             clearInterval(timer)\n//         }\n//     })\n//     return (\n//         <>\n//             <div>{count}</div>\n//             <button onClick={() => setCount(count + 1)}>ADD</button>\n//         </>\n//     )\n// }\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Foo() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  console.log('render');\n  useEffect(() => {\n    console.log('开启定时器');\n    let timer = setInterval(() => {\n      console.log(\"进入定时器\");\n      setCount(count + 1);\n    }, 1000);\n    console.log('useEffect');\n    return () => {\n      console.log('clean effect');\n      clearInterval(timer);\n    };\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Foo, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n\n_c = Foo;\n\nfunction App() {\n  _s2();\n\n  const [visible, setVisible] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [visible && /*#__PURE__*/_jsxDEV(Foo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setVisible(visible ? false : true),\n      children: \"\\u663E\\u793A/\\u9690\\u85CF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"LdKhoqwM5nNaI2S3nj04mF2NyjI=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Foo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/hello-react/src/App.js"],"names":["React","useEffect","useState","Foo","count","setCount","console","log","timer","setInterval","clearInterval","App","visible","setVisible"],"mappings":";;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACQ;AACR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,CAAD,CAAjC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC1BH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,KAHsB,EAGrB,IAHqB,CAAvB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAG,MAAAA,aAAa,CAACF,KAAD,CAAb;AACH,KAHD;AAIH,GAXQ,EAWP,CAACJ,KAAD,CAXO,CAAT;AAaA,sBACI;AAAA,4BACI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH;;GAxBQD,G;;KAAAA,G;;AAyBT,SAASQ,GAAT,GAAc;AAAA;;AAEV,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,IAAD,CAArC;AAEA,sBACI;AAAA,eACKU,OAAO,iBAAI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADhB,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAG,KAAH,GAAW,IAAnB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IAVQD,G;;MAAAA,G;AAWT,eAAeA,GAAf","sourcesContent":["// import React,{useState,useReducer} from 'react'\r\n\r\n// //若一个参数是对象的话 可以不用useState 考虑useReducer\r\n// const App = (params) => {\r\n\r\n//     const countReducer = (state, action) => {\r\n//         switch (action.type) {\r\n//             case 'add':\r\n//                 return state + 1;\r\n//             case 'minus':\r\n//                 return state - 1;\r\n//             default:\r\n//                 return state;\r\n//         }\r\n//     }\r\n//     //依然定义了一个 state 是 count，初始值为0 更新dispatch   \r\n//     const [count, countDispatch] = useReducer(countReducer, 0);\r\n\r\n//     const onClick = (params) => {\r\n//         //放入最新的 action\r\n        // countDispatch({type:'add'})\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div>{count}</div>\r\n//             <button onClick={() => onClick()}>button</button>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// import React,{useEffect} from \"react\";\r\n// function App(){\r\n//     const [count,setCount] = useState(0);\r\n\r\n//     console.log('render');\r\n    \r\n//     useEffect(() => {\r\n//         let timer = setInterval(() => {\r\n//             setCount(count + 1)\r\n//         },1000)\r\n//         console.log('useEffect')\r\n//         return () => {\r\n//             console.log('clean effect')\r\n//             clearInterval(timer)\r\n//         }\r\n//     })\r\n\r\n//     return (\r\n//         <>\r\n//             <div>{count}</div>\r\n//             <button onClick={() => setCount(count + 1)}>ADD</button>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\nimport React,{useEffect,useState} from \"react\";\r\n\r\nfunction Foo(){\r\n    const [count,setCount] = useState(0);\r\n\r\n    console.log('render');\r\n    \r\n    useEffect(() => {\r\n        console.log('开启定时器')\r\n        let timer = setInterval(() => {\r\n            console.log(\"进入定时器\")\r\n            setCount(count + 1)\r\n        },1000)\r\n        console.log('useEffect')\r\n        return () => {\r\n            console.log('clean effect')\r\n            clearInterval(timer)\r\n        }\r\n    },[count])\r\n\r\n    return (\r\n        <>\r\n            <div>{count}</div>\r\n            <button onClick={() => setCount(count + 1)}>ADD</button>\r\n        </>\r\n    )\r\n}\r\nfunction App(){\r\n\r\n    const [visible,setVisible] = useState(true);\r\n\r\n    return (\r\n        <div>\r\n            {visible && <Foo/>}\r\n            <button onClick={() => setVisible(visible ? false : true)}>显示/隐藏</button>\r\n        </div>\r\n    )\r\n}\r\nexport default App"]},"metadata":{},"sourceType":"module"}