{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\blog\\\\ts_hook\\\\src\\\\components\\\\Search\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySearch = ({\n  content\n}) => {\n  _s();\n\n  const [con, setCon] = useState();\n  setCon(content);\n  const MyHistory = useHistory();\n  const listRef = useRef(null);\n\n  const chooseItem = id => {\n    setCon('');\n    MyHistory.push(`mylist/detailed/${id}`);\n  };\n\n  if (con !== '' && con.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: listRef,\n      className: \"searchContent\",\n      children: con.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serchitem\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => chooseItem(item.id),\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } else if (content == \"\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serchitem\",\n        children: \"\\u5BF9\\u4E0D\\u8D77,\\u6CA1\\u6709\\u60A8\\u8981\\u67E5\\u627E\\u7684\\u4FE1\\u606F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(MySearch, \"Ow+xG3AAivReuvk1+rkDexmOu10=\", false, function () {\n  return [useHistory];\n});\n\n_c = MySearch;\nexport default MySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySearch\");","map":{"version":3,"sources":["D:/MyFile/blog/ts_hook/src/components/Search/index.tsx"],"names":["useRef","useState","useHistory","MySearch","content","con","setCon","MyHistory","listRef","chooseItem","id","push","length","map","item","title"],"mappings":";;;AAAA,SAAaA,MAAb,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,aAAP;;;;AAMA,MAAMC,QAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAE7C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,EAA9B;AACAK,EAAAA,MAAM,CAACF,OAAD,CAAN;AACA,QAAMG,SAAS,GAAGL,UAAU,EAA5B;AACA,QAAMM,OAAO,GAAGR,MAAM,CAAiB,IAAjB,CAAtB;;AAEA,QAAMS,UAAU,GAAIC,EAAD,IAAgB;AAC/BJ,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAC,IAAAA,SAAS,CAACI,IAAV,CAAgB,mBAAkBD,EAAG,EAArC;AACH,GAHD;;AAKA,MAAIL,GAAG,KAAK,EAAR,IAAcA,GAAG,CAAEO,MAAL,KAAgB,CAAlC,EAAqC;AACjC,wBACI;AAAK,MAAA,GAAG,EAAEJ,OAAV;AAAmB,MAAA,SAAS,EAAC,eAA7B;AAAA,gBAEQH,GAAG,CAAEQ,GAAL,CAAUC,IAAD,iBACL;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA,gCAEI;AAAM,UAAA,OAAO,EAAE,MAAML,UAAU,CAACK,IAAI,CAACJ,EAAN,CAA/B;AAAA,oBAA2CI,IAAI,CAACC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAA,oBAAOD,IAAI,CAACV;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAUU,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD,MAeO,IAAIN,OAAO,IAAI,EAAf,EAAmB;AACtB,wBAAO,qCAAP;AACH,GAFM,MAEA;AACH,wBAAO;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;AACJ,CApCD;;GAAMD,Q;UAIgBD,U;;;KAJhBC,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { FC, useRef, useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Articles } from \"../../interface\"\r\nimport './index.css'\r\n\r\ninterface searchRes {\r\n    content: Articles[] | ''\r\n}\r\n\r\nconst MySearch: FC<searchRes> = ({ content }) => {\r\n    \r\n    const [con, setCon] = useState<Articles[] | ''>()\r\n    setCon(content)\r\n    const MyHistory = useHistory()\r\n    const listRef = useRef<HTMLDivElement>(null)\r\n\r\n    const chooseItem = (id: number) => {\r\n        setCon('');\r\n        MyHistory.push(`mylist/detailed/${id}`)\r\n    }\r\n\r\n    if (con !== '' && con!.length !== 0) {\r\n        return (\r\n            <div ref={listRef} className=\"searchContent\">\r\n                {\r\n                    con!.map((item) => (\r\n                        <div key={item.id} className=\"serchitem\">\r\n                            {/* <Link to={`mylist/detailed/${item.id}`}> */}\r\n                            <span onClick={() => chooseItem(item.id)}>{item.title}</span>\r\n                            {/* </Link> */}\r\n                            <span>{item.content}</span>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    } else if (content == \"\") {\r\n        return <></>\r\n    } else {\r\n        return <div className=\"searchContent\">\r\n            <div className=\"serchitem\">\r\n                对不起,没有您要查找的信息\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default MySearch"]},"metadata":{},"sourceType":"module"}