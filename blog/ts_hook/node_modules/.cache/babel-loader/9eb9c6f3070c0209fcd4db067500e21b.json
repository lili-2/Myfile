{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\blog\\\\ts_hook\\\\src\\\\pages\\\\Login\\\\RegisterFrom\\\\index.tsx\";\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, UnlockFilled } from '@ant-design/icons'; // import '../static/css/Login.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterFrom = ({\n  switchFrom\n}) => {\n  const onFinish = () => {//     const { username, password } = values\n    //     axios.post('http://localhost:3000/checkLogin',\n    //       { username, password },\n    //     ).then(res => {\n    //       if (res.data.data === \"登陆成功\") {\n    //         localStorage.setItem(\"token\", res.data.token)\n    //         // props.history.push('/mylist')\n    //       } else {\n    //         message.error('用户名密码错误')\n    //       }\n    //     })\n  };\n\n  const onFinishFailed = err => {//     console.log('Failed:', err);\n  };\n\n  const toggleForm = () => {\n    props.switchFrom('login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"from-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6CE8\\u518C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleForm,\n        children: \"\\u8D26\\u53F7\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"from-content\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"login-div\",\n        name: \"basic\",\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 40\n            }, this),\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(UnlockFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 49\n            }, this),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password2\",\n          rules: [{\n            required: true,\n            message: 'Please confirm the password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(UnlockFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 49\n            }, this),\n            placeholder: \"Confirm password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RegisterFrom;\nexport default RegisterFrom;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterFrom\");","map":{"version":3,"sources":["D:/MyFile/blog/ts_hook/src/pages/Login/RegisterFrom/index.tsx"],"names":["Form","Input","Button","UserOutlined","UnlockFilled","RegisterFrom","switchFrom","onFinish","onFinishFailed","err","toggleForm","props","required","message"],"mappings":";AAEA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAA6C,MAA7C;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C,C,CACA;;;;;AAOA,MAAMC,YAAuB,GAAG,CAAC;AAC7BC,EAAAA;AAD6B,CAAD,KAEZ;AAEhB,QAAMC,QAAQ,GAAG,MAAM,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAZD;;AAcA,QAAMC,cAAc,GAAIC,GAAD,IAAS,CAC5B;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAACL,UAAN,CAAiB,OAAjB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,OAAO,EAAEI,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,IAAI,EAAC,OAAjC;AACI,QAAA,QAAQ,EAAEH,QADd;AAEI,QAAA,cAAc,EAAEC,cAFpB;AAGI,QAAA,YAAY,EAAC,KAHjB;AAAA,gCAKI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,IAAI,EAAC,UAAhB;AACI,UAAA,KAAK,EAAE,CAAC;AAAEI,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CADX;AAAA,iCAGI,QAAC,KAAD;AAAO,YAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAf;AAAiC,YAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAWI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,IAAI,EAAC,UAAhB;AACI,UAAA,KAAK,EAAE,CAAC;AAAED,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CADX;AAAA,iCAGI,QAAC,KAAD,CAAO,QAAP;AAAgB,YAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAxB;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAgBI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,IAAI,EAAC,WAAhB;AACI,UAAA,KAAK,EAAE,CAAC;AAAED,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CADX;AAAA,iCAGI,QAAC,KAAD,CAAO,QAAP;AAAgB,YAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAxB;AAA0C,YAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAqBI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,QAAQ,EAAC,QAAhC;AAAyC,YAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAqCH,CA/DD;;KAAMR,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import { FC, ReactElement } from \"react\"\r\nimport axios from 'axios'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, UnlockFilled } from '@ant-design/icons'\r\n// import '../static/css/Login.css'\r\n\r\n\r\n\r\ninterface Froms {\r\n    switchFrom: (value: string) => void\r\n}\r\nconst RegisterFrom: FC<Froms> = ({\r\n    switchFrom\r\n}): ReactElement => {\r\n\r\n    const onFinish = () => {\r\n        //     const { username, password } = values\r\n        //     axios.post('http://localhost:3000/checkLogin',\r\n        //       { username, password },\r\n        //     ).then(res => {\r\n        //       if (res.data.data === \"登陆成功\") {\r\n        //         localStorage.setItem(\"token\", res.data.token)\r\n        //         // props.history.push('/mylist')\r\n        //       } else {\r\n        //         message.error('用户名密码错误')\r\n        //       }\r\n        //     })\r\n    };\r\n\r\n    const onFinishFailed = (err) => {\r\n        //     console.log('Failed:', err);\r\n    };\r\n\r\n    const toggleForm = () => {\r\n        props.switchFrom('login');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"from-header\">\r\n                <span>注册</span>\r\n                <span onClick={toggleForm}>账号登录</span>\r\n            </div>\r\n            <div className=\"from-content\">\r\n                <Form className=\"login-div\" name=\"basic\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item name=\"username\"\r\n                        rules={[{ required: true, message: 'Please input your username!', },]}\r\n                    >\r\n                        <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"password\"\r\n                        rules={[{ required: true, message: 'Please input your password!', },]}\r\n                    >\r\n                        <Input.Password prefix={<UnlockFilled />} placeholder=\"password\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password2\"\r\n                        rules={[{ required: true, message: 'Please confirm the password!', },]}\r\n                    >\r\n                        <Input.Password prefix={<UnlockFilled />} placeholder=\"Confirm password\" />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block >\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterFrom"]},"metadata":{},"sourceType":"module"}