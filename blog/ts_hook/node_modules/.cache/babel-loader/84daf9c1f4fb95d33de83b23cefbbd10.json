{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\blog\\\\ts_hook\\\\src\\\\components\\\\Search\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport myAxios from \"../../util/MyAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySearch = ({\n  content\n}) => {\n  _s();\n\n  console.log(\"mysearc\");\n  const [searchCon, setSearchCon] = useState('');\n\n  const SearchContents = async content => {\n    const result = await myAxios.get(`http://localhost:3000/mylist/search?title=${content}`).then(res => {\n      console.log(res.data);\n      return res.data;\n    });\n    return result;\n  };\n\n  useEffect(() => {\n    SearchContents(content).then(result => setSearchCon(result));\n  }, []);\n\n  if (searchCon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}; // const Ajax = () => {\n//     useEffect(() => {\n//         myAxios.get('http://localhost:3000').then((res) => {\n//         },(err) => {\n//         })    \n//     }, [])\n//     return (<></>)\n// }\n\n\n_s(MySearch, \"qly1yU8BOjoMVwfwmokorZ+irjw=\");\n\n_c = MySearch;\nexport default MySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySearch\");","map":{"version":3,"sources":["D:/MyFile/blog/ts_hook/src/components/Search/index.tsx"],"names":["useEffect","useState","myAxios","MySearch","content","console","log","searchCon","setSearchCon","SearchContents","result","get","then","res","data"],"mappings":";;;AACA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAOA,MAAMC,QAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAkB,EAAlB,CAA1C;;AAEA,QAAMQ,cAAc,GAAG,MAAOL,OAAP,IAA2B;AAC9C,UAAMM,MAAM,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAa,6CAA4CP,OAAQ,EAAjE,EAAoEQ,IAApE,CAChBC,GAAD,IAAS;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAhB;AACA,aAAOD,GAAG,CAACC,IAAX;AACH,KAJgB,CAArB;AAMA,WAAOJ,MAAP;AACH,GARD;;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,cAAc,CAACL,OAAD,CAAd,CAAwBQ,IAAxB,CACIF,MAAM,IAAIF,YAAY,CAACE,MAAD,CAD1B;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIH,SAAJ,EAAe;AACX,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAbD,MAaO;AACH,wBAAQ,qCAAR;AACH;AAEJ,CAvCD,C,CAyCA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;GAnDMJ,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["\r\nimport { FC, useEffect, useState } from \"react\"\r\nimport myAxios from \"../../util/MyAxios\"\r\nimport { Articles } from \"../../interface\"\r\n\r\ninterface SearCon{\r\n    content: string | ''\r\n}\r\n\r\nconst MySearch: FC<SearCon> = ({content}) => {\r\n\r\n    console.log(\"mysearc\")\r\n\r\n    const [searchCon, setSearchCon] = useState<Articles[] | ''>('')\r\n\r\n    const SearchContents = async (content: string) => {\r\n        const result = await myAxios.get(`http://localhost:3000/mylist/search?title=${content}`).then(\r\n            (res) => {\r\n                console.log(res.data)\r\n                return res.data\r\n            }\r\n        )\r\n        return result;\r\n    }\r\n\r\n    useEffect(() => {\r\n        SearchContents(content).then(\r\n            result => setSearchCon(result)\r\n        );\r\n    }, [])\r\n\r\n    if (searchCon) {\r\n        return (\r\n            <div className=\"searchContent\">\r\n                {\r\n                    // searchCon.map((item) => {\r\n                    //     <div key={item.id} className=\"serchitem\">\r\n                    //         <span></span>\r\n                    //     </div>\r\n                    // })\r\n                \r\n                }\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<></>)\r\n    }\r\n\r\n}\r\n\r\n// const Ajax = () => {\r\n//     useEffect(() => {\r\n\r\n//         myAxios.get('http://localhost:3000').then((res) => {\r\n\r\n//         },(err) => {\r\n\r\n//         })    \r\n//     }, [])\r\n//     return (<></>)\r\n// }\r\nexport default MySearch"]},"metadata":{},"sourceType":"module"}