{"ast":null,"code":"import axios from 'axios';\nconst myAxios = axios.create({\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  baseURL: \"http://localhost:3000\"\n}); //请求响应器\n\nmyAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers.authorization = token;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n}); // 响应拦截器\n\nmyAxios.interceptors.response.use(response => {\n  if (response.data === 'undefined') {}\n\n  return response.data;\n}, err => {\n  return Promise.reject(err);\n});\nexport default myAxios;","map":{"version":3,"sources":["D:/MyFile/blog/ts_hook/src/util/MyAxios/index.ts"],"names":["axios","myAxios","create","headers","baseURL","interceptors","request","use","config","token","localStorage","getItem","authorization","err","Promise","reject","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAC;AAAC,oBAAgB;AAAjB,GADiB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACIC,MAAM,IAAI;AACN,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAGF,KAAH,EAAU;AACND,IAAAA,MAAM,CAACL,OAAP,CAAgBS,aAAhB,GAAgCH,KAAhC;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQIK,GAAG,IAAI;AACH,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,CAVL,E,CAaA;;AACAZ,OAAO,CAACI,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CACIS,QAAQ,IAAI;AACR,MAAGA,QAAQ,CAACC,IAAT,KAAkB,WAArB,EAAiC,CAEhC;;AACD,SAAOD,QAAQ,CAACC,IAAhB;AACH,CANL,EAOIJ,GAAG,IAAI;AACH,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,CATL;AAYA,eAAeZ,OAAf","sourcesContent":["import axios from 'axios'\r\n\r\nconst myAxios = axios.create({\r\n    headers:{'Content-Type': 'application/json'},\r\n    baseURL: \"http://localhost:3000\"\r\n})\r\n\r\n//请求响应器\r\nmyAxios.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token')\r\n        if(token) {\r\n            config.headers!.authorization = token;\r\n        }\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n)\r\n\r\n// 响应拦截器\r\nmyAxios.interceptors.response.use(\r\n    response => {\r\n        if(response.data === 'undefined'){\r\n\r\n        }\r\n        return response.data\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n)\r\n\r\nexport default myAxios;"]},"metadata":{},"sourceType":"module"}