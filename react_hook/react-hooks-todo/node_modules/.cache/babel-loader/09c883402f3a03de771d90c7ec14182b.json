{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\react-hooks-todo\\\\src\\\\components\\\\TodoList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport IdInput from './Input';\nimport TdList from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoList, settodoList] = useState([]);\n  const addTodo = useCallback(todo => {\n    settodoList;\n  }, []); // 父组件更新 子组件并没有更新的时候 这个函数 会重新生成一次\n  //  如果子组件的方法是父组件传过来的话 都用useCallback包一下\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(IdInput, {\n      addTodo: addTodo,\n      todoList: todoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TdList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"4pdJqYqCZ/rKshqnMuKpE+Vy2Jk=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/MyFile/react-hooks-todo/src/components/TodoList/index.tsx"],"names":["React","useCallback","useState","IdInput","TdList","TodoList","todoList","settodoList","addTodo","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAkCC,WAAlC,EAA+CC,QAA/C,QAA+D,OAA/D;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,MAAMC,QAAY,GAAG,MAAoB;AAAA;;AAErC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAU,EAAV,CAAxC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAEQ,IAAD,IAAiB;AACzCF,IAAAA,WAAW;AACd,GAF0B,EAExB,EAFwB,CAA3B,CAJqC,CAOrC;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,OAAO,EAAEC,OADb;AAEI,MAAA,QAAQ,EAAEF;AAFd;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;GAAMD,Q;;KAAAA,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React, { FC, ReactElement, useCallback, useState } from \"react\";\r\n\r\nimport IdInput from './Input'\r\nimport TdList from \"./List\";\r\nimport { ITodo } from \"./typings\";\r\n\r\nconst TodoList: FC = (): ReactElement => {\r\n\r\n    const [todoList, settodoList] = useState<ITodo[]>([])\r\n\r\n    const addTodo = useCallback((todo: ITodo) => {\r\n        settodoList\r\n    }, [])\r\n    // 父组件更新 子组件并没有更新的时候 这个函数 会重新生成一次\r\n    //  如果子组件的方法是父组件传过来的话 都用useCallback包一下\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <IdInput\r\n                addTodo={addTodo}\r\n                todoList={todoList}\r\n            />\r\n            <TdList />\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}