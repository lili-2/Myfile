{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\react-hooks-todo\\\\src\\\\components\\\\TodoList\\\\Input\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IdInput = ({\n  addTodo,\n  todoList\n}) => {\n  _s();\n\n  //泛型\n  //useRef useState 后面都需要后面写一个泛型 默认值为null\n  const inputRef = useRef(null);\n\n  const addItem = () => {\n    const val = inputRef.current.value.trim(); //加一下断言 告诉js这里肯定有值\n\n    if (val.length) {\n      const isExist = todoList.find(todo => todo.content === val);\n\n      if (isExist) {\n        alert('已存在该项');\n        return;\n      }\n\n      addTodo({\n        id: new Date().getTime(),\n        content: val,\n        completed: false\n      });\n      inputRef.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5F85\\u529E\\u9879\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"\\u589E\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}; // {\n// id：number  newDate().getTime()\n// content string\n// completed: boolean \n// }\n\n\n_s(IdInput, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = IdInput;\nexport default IdInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdInput\");","map":{"version":3,"sources":["D:/MyFile/react-hooks-todo/src/components/TodoList/Input/index.tsx"],"names":["React","useRef","IdInput","addTodo","todoList","inputRef","addItem","val","current","value","trim","length","isExist","find","todo","content","alert","id","Date","getTime","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAAgD,OAAhD;;;AAWA,MAAMC,OAAmB,GAAG,CAAC;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA;AAFyB,CAAD,KAGR;AAAA;;AAEhB;AACA;AACA,QAAMC,QAAQ,GAAGJ,MAAM,CAAmB,IAAnB,CAAvB;;AAEA,QAAMK,OAAO,GAAG,MAAY;AACxB,UAAMC,GAAW,GAAGF,QAAQ,CAACG,OAAT,CAAkBC,KAAlB,CAAwBC,IAAxB,EAApB,CADwB,CAExB;;AAEA,QAAIH,GAAG,CAACI,MAAR,EAAgB;AACZ,YAAMC,OAAO,GAAGR,QAAQ,CAACS,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBR,GAAvC,CAAhB;;AAEA,UAAIK,OAAJ,EAAa;AACTI,QAAAA,KAAK,CAAC,OAAD,CAAL;AACA;AACH;;AACDb,MAAAA,OAAO,CAAC;AACJc,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADA;AAEJJ,QAAAA,OAAO,EAAER,GAFL;AAGJa,QAAAA,SAAS,EAAE;AAHP,OAAD,CAAP;AAMAf,MAAAA,QAAQ,CAACG,OAAT,CAAkBC,KAAlB,GAA0B,EAA1B;AACH;AACJ,GAnBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEJ,QAAZ;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApCD,C,CAsCA;AACA;AACA;AACA;AACA;;;GA1CMJ,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React, { useRef, FC, ReactElement } from \"react\";\r\nimport TodoList from \"..\";\r\nimport { ITodo } from \"../typings\";\r\n\r\n//函数组件本身是有类型的 FC function Component\r\n\r\ninterface IProps {\r\n    addTodo: (todo: ITodo) => void;\r\n    todoList: ITodo[];\r\n}\r\n\r\nconst IdInput: FC<IProps> = ({\r\n    addTodo,\r\n    todoList\r\n}): ReactElement => {\r\n\r\n    //泛型\r\n    //useRef useState 后面都需要后面写一个泛型 默认值为null\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const addItem = (): void => {\r\n        const val: string = inputRef.current!.value.trim()\r\n        //加一下断言 告诉js这里肯定有值\r\n\r\n        if (val.length) {\r\n            const isExist = todoList.find(todo => todo.content === val);\r\n\r\n            if (isExist) {\r\n                alert('已存在该项');\r\n                return;\r\n            }\r\n            addTodo({\r\n                id: new Date().getTime(),\r\n                content: val,\r\n                completed: false\r\n            })\r\n\r\n            inputRef.current!.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-input\">\r\n            <input ref={inputRef} type=\"text\" placeholder=\"请输入待办项\" />\r\n            <button onClick={addItem}>增加</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// {\r\n// id：number  newDate().getTime()\r\n// content string\r\n// completed: boolean \r\n// }\r\nexport default IdInput"]},"metadata":{},"sourceType":"module"}