{"ast":null,"code":"import { ADD, SQUARE } from '../constans/ActionTypes'; // const addOne = {\n//     type: ADD,\n//     num: 1\n// }\n// const addTwo = {\n//     type: ADD,\n//     num: 2\n// }\n// const square = {\n//     type: SQUARE\n// }\n\nconst addAction = num => {\n  return {\n    type: ADD,\n    num\n  };\n};\n\nconst squareAction = num => {\n  return {\n    type: SQUARE\n  };\n};\n\nconst getAction = () => {\n  return (dispatch, getState) => {\n    fetch('./data.json').then(res => res.json()).then(res => {\n      dispatch({\n        type: 'GET',\n        num: Number(res[0])\n      });\n    });\n  };\n};\n\nexport { addAction, squareAction, getAction };","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/redux/src/actions/actions.js"],"names":["ADD","SQUARE","addAction","num","type","squareAction","getAction","dispatch","getState","fetch","then","res","json","Number"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,MAAZ,QAAyB,yBAAzB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,SAAO;AACHC,IAAAA,IAAI,EAAEJ,GADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMA,MAAME,YAAY,GAAIF,GAAD,IAAS;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMK,SAAS,GAAG,MAAM;AACpB,SAAO,CAACC,QAAD,EAAUC,QAAV,KAAuB;AAC1BC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE,KADD;AAELD,QAAAA,GAAG,EAAEU,MAAM,CAACF,GAAG,CAAC,CAAD,CAAJ;AAFN,OAAD,CAAR;AAIH,KAPL;AAQH,GATD;AAUH,CAXD;;AAYA,SACIT,SADJ,EAEIG,YAFJ,EAGIC,SAHJ","sourcesContent":["import {ADD,SQUARE} from '../constans/ActionTypes'\n\n// const addOne = {\n//     type: ADD,\n//     num: 1\n// }\n\n// const addTwo = {\n//     type: ADD,\n//     num: 2\n// }\n\n// const square = {\n//     type: SQUARE\n// }\n\nconst addAction = (num) => {\n    return {\n        type: ADD,\n        num\n    }\n}\nconst squareAction = (num) => {\n    return {\n        type: SQUARE\n    }\n}\nconst getAction = () => {\n    return (dispatch,getState) => {\n        fetch('./data.json')\n            .then(res => res.json())\n            .then(res => {\n                dispatch({\n                    type: 'GET',\n                    num: Number(res[0])\n                })\n            })\n    }\n}\nexport {\n    addAction,\n    squareAction,\n    getAction\n}"]},"metadata":{},"sourceType":"module"}