{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/MyFile/react2/redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { addAction, squareAction } from './actions/actions';\nimport math from './reducers/math';\nimport Container from './Components/Container';\nimport { Provider } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(math);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction render() {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n}\n\nrender();\nstore.subscribe(render); // 1. store 存取数据的仓库 const store = createStore(reducer)\n// 2. state 在数据仓库中存储的数据 获取快照 store.getState() 查看数据状态\n// 3. action 对象 描述现在如何操作数据\n// const action = {\n//   type: 'ADD_ONE',\n//   num: 1\n// }\n// const action = {\n//   type: 'ADD_TWO',\n//   num: 2\n// }\n// 4. dispatch 唯一能更改state的方法 store.dispatch(action)\n// 5. reducer 函数 返回一个更新的state\n// const reducer = (state = 10,action) => {\n//   switch(action.type){\n//     case 'ADD_ONE':\n//       return state + action.num;\n//     case 'ADD_two':\n//       return state + action.num;\n//   }\n// }\n// function App(){\n//   return (\n//     <div>123</div>\n//   )\n// }\n//展示组件 UI显示  和 容器组件 \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/redux/src/index.js"],"names":["React","ReactDOM","createStore","addAction","squareAction","math","Container","Provider","store","App","render","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGQ,mBAHR;AAIA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACG,IAAD,CAAzB;;AACA,SAASI,GAAT,GAAc;AAEZ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAPQA,G;;AAST,SAASC,MAAT,GAAiB;AACfT,EAAAA,QAAQ,CAACS,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAMD;;AAEDF,MAAM;AAENF,KAAK,CAACK,SAAN,CAAgBH,MAAhB,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {\n    addAction,\n    squareAction\n  }from './actions/actions'\nimport math from './reducers/math'\nimport Container from './Components/Container'\n\nimport {Provider} from 'react-redux'\n\nconst store = createStore(math);\nfunction App(){\n\n  return (\n    <div>\n      Container\n   </div>\n  )\n}\n\nfunction render(){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\n\nstore.subscribe(render)\n\n// 1. store 存取数据的仓库 const store = createStore(reducer)\n// 2. state 在数据仓库中存储的数据 获取快照 store.getState() 查看数据状态\n// 3. action 对象 描述现在如何操作数据\n\n// const action = {\n//   type: 'ADD_ONE',\n//   num: 1\n// }\n// const action = {\n//   type: 'ADD_TWO',\n//   num: 2\n// }\n// 4. dispatch 唯一能更改state的方法 store.dispatch(action)\n// 5. reducer 函数 返回一个更新的state\n\n// const reducer = (state = 10,action) => {\n//   switch(action.type){\n//     case 'ADD_ONE':\n//       return state + action.num;\n//     case 'ADD_two':\n//       return state + action.num;\n//   }\n// }\n\n// function App(){\n//   return (\n//     <div>123</div>\n//   )\n// }\n\n//展示组件 UI显示  和 容器组件 "]},"metadata":{},"sourceType":"module"}