{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/MyFile/react2/redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { addAction, squareAction } from './actions/actions';\nimport math from './reducers/math';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(math);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: store.getState()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.dispatch(addAction(1)),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.dispatch(addAction(2)),\n      children: \"+2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.dispatch(squareAction()),\n      children: \"**\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction render() {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n}\n\nrender();\nstore.subscribe(render); // 1. store 存取数据的仓库 const store = createStore(reducer)\n// 2. state 在数据仓库中存储的数据 获取快照 store.getState() 查看数据状态\n// 3. action 对象 描述现在如何操作数据\n// const action = {\n//   type: 'ADD_ONE',\n//   num: 1\n// }\n// const action = {\n//   type: 'ADD_TWO',\n//   num: 2\n// }\n// 4. dispatch 唯一能更改state的方法 store.dispatch(action)\n// 5. reducer 函数 返回一个更新的state\n// const reducer = (state = 10,action) => {\n//   switch(action.type){\n//     case 'ADD_ONE':\n//       return state + action.num;\n//     case 'ADD_two':\n//       return state + action.num;\n//   }\n// }\n// function App(){\n//   return (\n//     <div>123</div>\n//   )\n// }\n//\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/redux/src/index.js"],"names":["React","ReactDOM","createStore","addAction","squareAction","math","store","App","getState","dispatch","render","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGQ,mBAHR;AAIA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAACG,IAAD,CAAzB;;AACA,SAASE,GAAT,GAAc;AAEZ,sBACE;AAAA,4BACE;AAAA,gBAAID,KAAK,CAACE,QAAN;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACG,QAAN,CAAeN,SAAS,CAAC,CAAD,CAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMG,KAAK,CAACG,QAAN,CAAeN,SAAS,CAAC,CAAD,CAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMG,KAAK,CAACG,QAAN,CAAeL,YAAY,EAA3B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQG,G;;AAYT,SAASG,MAAT,GAAiB;AACfT,EAAAA,QAAQ,CAACS,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAMD;;AAEDF,MAAM;AAENJ,KAAK,CAACO,SAAN,CAAgBH,MAAhB,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {\n    addAction,\n    squareAction\n  }from './actions/actions'\nimport math from './reducers/math'\n\nconst store = createStore(math);\nfunction App(){\n\n  return (\n    <div>\n      <p>{store.getState()}</p>\n      <button onClick={() => store.dispatch(addAction(1))}>+1</button>\n      <button onClick={() => store.dispatch(addAction(2))}>+2</button>\n      <button onClick={() => store.dispatch(squareAction())}>**</button>\n    </div>\n  )\n}\n\nfunction render(){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\n\nstore.subscribe(render)\n\n// 1. store 存取数据的仓库 const store = createStore(reducer)\n// 2. state 在数据仓库中存储的数据 获取快照 store.getState() 查看数据状态\n// 3. action 对象 描述现在如何操作数据\n\n// const action = {\n//   type: 'ADD_ONE',\n//   num: 1\n// }\n// const action = {\n//   type: 'ADD_TWO',\n//   num: 2\n// }\n// 4. dispatch 唯一能更改state的方法 store.dispatch(action)\n// 5. reducer 函数 返回一个更新的state\n\n// const reducer = (state = 10,action) => {\n//   switch(action.type){\n//     case 'ADD_ONE':\n//       return state + action.num;\n//     case 'ADD_two':\n//       return state + action.num;\n//   }\n// }\n\n// function App(){\n//   return (\n//     <div>123</div>\n//   )\n// }\n\n//"]},"metadata":{},"sourceType":"module"}