{"ast":null,"code":"var _jsxFileName = \"D:\\\\react2\\\\hello-react\\\\src\\\\components\\\\List\\\\index.js\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\nimport PropTypes from 'prop-types';\nimport Item from '../Item';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: '吃饭',\n        done: true\n      }, {\n        id: '002',\n        name: '睡觉',\n        done: true\n      }, {\n        id: '003',\n        name: '打代码',\n        done: false\n      }, {\n        id: '004',\n        name: '逛街',\n        done: false\n      }]\n    };\n  }\n\n  componentDidMount() {\n    //订阅消息\n    PubSub.subscribe('atguigu', (msg, data) => {\n      // console.log('接受消息了',data)\n      const newTodos = [data, ...todos];\n      this.setState({\n        todos: newTodos\n      });\n    });\n  } //对接受的的类型进行限制\n  // static propTypes = {\n  //     todos: PropTypes.array.isRequired,\n  //     updateTodo: PropTypes.func.isRequired,\n  //     deleteTodo: PropTypes.func.isRequired\n  // }\n\n\n  render() {\n    const {\n      todos,\n      updateTodo,\n      deleteTodo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-main\",\n      children: todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(Item, { ...todo,\n          updateTodo: updateTodo,\n          deleteTodo: deleteTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react2/hello-react/src/components/List/index.js"],"names":["React","Component","PubSub","PropTypes","Item","List","state","todos","id","name","done","componentDidMount","subscribe","msg","data","newTodos","setState","render","updateTodo","deleteTodo","map","todo","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAExCK,KAFwC,GAEhC;AACJC,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,EAAE,EAAE,KAAL;AAAWC,QAAAA,IAAI,EAAC,IAAhB;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OADE,EAEF;AAACF,QAAAA,EAAE,EAAE,KAAL;AAAWC,QAAAA,IAAI,EAAC,IAAhB;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAFE,EAGF;AAACF,QAAAA,EAAE,EAAE,KAAL;AAAWC,QAAAA,IAAI,EAAC,KAAhB;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAHE,EAIF;AAACF,QAAAA,EAAE,EAAE,KAAL;AAAWC,QAAAA,IAAI,EAAC,IAAhB;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAJE;AADF,KAFgC;AAAA;;AAWxCC,EAAAA,iBAAiB,GAAE;AAEf;AACAT,IAAAA,MAAM,CAACU,SAAP,CAAiB,SAAjB,EAA2B,CAACC,GAAD,EAAKC,IAAL,KAAc;AACrC;AACA,YAAMC,QAAQ,GAAG,CAACD,IAAD,EAAM,GAAGP,KAAT,CAAjB;AACA,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEQ;AAAR,OAAd;AACH,KAJD;AAKH,GAnBuC,CAoBxC;AACA;AACA;AACA;AACA;AACA;;;AAEAE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,KAAD;AAAOW,MAAAA,UAAP;AAAkBC,MAAAA;AAAlB,QAAgC,KAAKb,KAA3C;AACA,wBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAEQC,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACpB,4BAAO,QAAC,IAAD,OAAwBD,IAAxB;AAA8B,UAAA,UAAU,EAAEH,UAA1C;AAAsD,UAAA,UAAU,EAAEC;AAAlE,WAAWE,IAAI,CAACb,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAtCuC","sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js' \r\nimport PropTypes from 'prop-types'\r\nimport Item from '../Item'\r\nimport './index.css'\r\n\r\nexport default class List extends Component {\r\n\r\n    state = {\r\n        todos:[\r\n            {id: '001',name:'吃饭',done: true},\r\n            {id: '002',name:'睡觉',done: true},\r\n            {id: '003',name:'打代码',done: false},\r\n            {id: '004',name:'逛街',done: false},\r\n        ]\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        //订阅消息\r\n        PubSub.subscribe('atguigu',(msg,data) => {\r\n            // console.log('接受消息了',data)\r\n            const newTodos = [data,...todos]\r\n            this.setState({todos: newTodos})\r\n        })\r\n    }\r\n    //对接受的的类型进行限制\r\n    // static propTypes = {\r\n    //     todos: PropTypes.array.isRequired,\r\n    //     updateTodo: PropTypes.func.isRequired,\r\n    //     deleteTodo: PropTypes.func.isRequired\r\n    // }\r\n\r\n    render() {\r\n        const {todos,updateTodo,deleteTodo} = this.state\r\n        return (\r\n            <ul className=\"todo-main\">\r\n                {\r\n                    todos.map((todo,index)=>{\r\n                        return <Item key={todo.id} {...todo} updateTodo={updateTodo} deleteTodo={deleteTodo}/>\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}