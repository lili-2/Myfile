{"ast":null,"code":"var _jsxFileName = \"/run/media/lin/Data/MyFile/react2/hello-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SubCounter({\n  onClick,\n  data\n}) {\n  console.log('SubCounter render');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: data.number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SubCounter;\nSubCounter = memo(SubCounter);\nlet oldData, oldAddCilick;\nexport default function Counter2() {\n  _s();\n\n  console.log('Counter2 render');\n  const [name, setName] = useState('计时器');\n  const [number, setNumber] = useState(0); // const data = useMemo(() => {number},[]);\n\n  const data = useMemo(() => number, [number]);\n  console.log('data === oldData', data === oldData);\n  oldData = data;\n  const addClick = useCallback(() => {\n    setNumber(number + 1);\n  }, [number]);\n  console.log('addClick === oldAddClick', addClick === oldAddClick);\n  oldAddClick = addClick;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubCounter, {\n      data: data,\n      onClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter2, \"7Jcume0qs58+DSegd+UiLAH/MfM=\");\n\n_c2 = Counter2;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubCounter\");\n$RefreshReg$(_c2, \"Counter2\");","map":{"version":3,"sources":["/run/media/lin/Data/MyFile/react2/hello-react/src/App.js"],"names":["React","useState","useMemo","useCallback","SubCounter","onClick","data","console","log","number","memo","oldData","oldAddCilick","Counter2","name","setName","setNumber","addClick","oldAddClick","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,OAAvB,EAA+BC,WAA/B,QAAiD,OAAjD;;;;AAEA,SAASC,UAAT,CAAqB;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAArB,EAAoC;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,sBACI;AAAQ,IAAA,OAAO,EAAEF,IAAI,CAACG;AAAtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KALQL,U;AAMTA,UAAU,GAAGM,IAAI,CAACN,UAAD,CAAjB;AAEA,IAAIO,OAAJ,EAAYC,YAAZ;AACA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9BN,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAM,CAACM,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACQ,MAAD,EAAQO,SAAR,IAAqBf,QAAQ,CAAC,CAAD,CAAnC,CAH8B,CAK9B;;AACA,QAAMK,IAAI,GAAGJ,OAAO,CAAC,MAAMO,MAAP,EAAe,CAACA,MAAD,CAAf,CAApB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,IAAI,KAAKK,OAAxC;AAEAA,EAAAA,OAAO,GAAGL,IAAV;AAEA,QAAMW,QAAQ,GAAGd,WAAW,CACxB,MAAM;AACFa,IAAAA,SAAS,CAACP,MAAM,GAAG,CAAV,CAAT;AACH,GAHuB,EAGtB,CAACA,MAAD,CAHsB,CAA5B;AAKAF,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCS,QAAQ,KAAKC,WAApD;AACAA,EAAAA,WAAW,GAAGD,QAAd;AAEA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEH,IAA1B;AAAgC,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAIf,IAApB;AAA0B,MAAA,OAAO,EAAEW;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH;;GA1BuBJ,Q;;MAAAA,Q","sourcesContent":["import React,{useState,useMemo,useCallback} from 'react'\r\n\r\nfunction SubCounter ({onClick,data}){\r\n    console.log('SubCounter render');\r\n    return (\r\n        <button onClick={data.number}></button>\r\n    )\r\n}\r\nSubCounter = memo(SubCounter)\r\n\r\nlet oldData,oldAddCilick;\r\nexport default function Counter2(){\r\n    console.log('Counter2 render');\r\n    const [name,setName] = useState('计时器');\r\n    const [number,setNumber] = useState(0)\r\n\r\n    // const data = useMemo(() => {number},[]);\r\n    const data = useMemo(() => number, [number]);\r\n    console.log('data === oldData',data === oldData);\r\n\r\n    oldData = data;\r\n\r\n    const addClick = useCallback(\r\n        () => {\r\n            setNumber(number + 1);\r\n        },[number],\r\n    )\r\n    console.log('addClick === oldAddClick',addClick === oldAddClick);\r\n    oldAddClick = addClick\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n            <SubCounter data = {data} onClick={addClick}/>\r\n        </>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}